{"ast":null,"code":"var _jsxFileName = \"/Users/ankurbag/Projects/BrainStation/brainstation_apr19_dec17/unit-3/react-state-demo/src/components/Journal.js\";\nimport { Component } from 'react';\nimport JournalEntry from './JournalEntry/JournalEntry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Journal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      entries: [{\n        id: 1,\n        title: 'My favourite linguine',\n        likes: 50\n      }, {\n        id: 2,\n        title: 'How I became a squirrel',\n        likes: 27\n      }, {\n        id: 3,\n        title: 'Fun with React State!',\n        likes: 1\n      }]\n    };\n\n    this.handleAdd = () => {\n      // 1. Make a new entry object\n      const newEntry = {\n        id: Date.now(),\n        title: 'Infinite loops: a personal guide',\n        likes: 10\n      }; // 2. Concat our array with our new entry\n\n      const newEntries = this.state.entries.concat(newEntry); // 3. Set a new array into our state\n\n      this.setState({\n        entries: newEntries\n      });\n    };\n\n    this.handleLike = entryId => {\n      // Increase the likes for this specific entry by 1\n      // const newEntries = this.state.entries.slice();\n      // const entryToLike = newEntries.find((entry) => entry.id === entryId);\n      // entryToLike.likes++;\n      // ^ or do it with map/object.assign/spread, because the above is technically mutating\n      const newEntries = this.state.entries.map(entry => {\n        if (entry.id === entryId) {\n          return {\n            id: entry.id,\n            title: entry.title,\n            likes: entry.likes + 1\n          };\n        }\n\n        return entry;\n      });\n      this.setState({\n        entries: newEntries\n      });\n    };\n\n    this.handleDelete = id => {};\n\n    this.handleSort = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Journal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.state.entries.map(entry => /*#__PURE__*/_jsxDEV(JournalEntry, {\n        entry: entry,\n        onLike: this.handleLike\n      }, entry.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleAdd,\n        children: \"Add Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Journal;","map":{"version":3,"sources":["/Users/ankurbag/Projects/BrainStation/brainstation_apr19_dec17/unit-3/react-state-demo/src/components/Journal.js"],"names":["Component","JournalEntry","Journal","state","entries","id","title","likes","handleAdd","newEntry","Date","now","newEntries","concat","setState","handleLike","entryId","map","entry","handleDelete","handleSort","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACJC,MAAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,uBAAhB;AAAyCC,QAAAA,KAAK,EAAE;AAAhD,OADK,EAEL;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,yBAAhB;AAA2CC,QAAAA,KAAK,EAAE;AAAlD,OAFK,EAGL;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,uBAAhB;AAAyCC,QAAAA,KAAK,EAAE;AAAhD,OAHK;AADL,KADoB;;AAAA,SAS5BC,SAT4B,GAShB,MAAM;AACd;AACA,YAAMC,QAAQ,GAAG;AAAEJ,QAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,EAAN;AAAkBL,QAAAA,KAAK,EAAE,kCAAzB;AAA6DC,QAAAA,KAAK,EAAE;AAApE,OAAjB,CAFc,CAId;;AACA,YAAMK,UAAU,GAAG,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,MAAnB,CAA0BJ,QAA1B,CAAnB,CALc,CAOd;;AACA,WAAKK,QAAL,CAAc;AACVV,QAAAA,OAAO,EAAEQ;AADC,OAAd;AAGH,KApB2B;;AAAA,SAsB5BG,UAtB4B,GAsBdC,OAAD,IAAa;AACtB;AAEA;AACA;AACA;AACA;AAEA,YAAMJ,UAAU,GAAG,KAAKT,KAAL,CAAWC,OAAX,CAAmBa,GAAnB,CAAwBC,KAAD,IAAW;AACjD,YAAIA,KAAK,CAACb,EAAN,KAAaW,OAAjB,EAA0B;AACtB,iBAAO;AACHX,YAAAA,EAAE,EAAEa,KAAK,CAACb,EADP;AAEHC,YAAAA,KAAK,EAAEY,KAAK,CAACZ,KAFV;AAGHC,YAAAA,KAAK,EAAEW,KAAK,CAACX,KAAN,GAAc;AAHlB,WAAP;AAKH;;AAED,eAAOW,KAAP;AACH,OAVkB,CAAnB;AAYA,WAAKJ,QAAL,CAAc;AACVV,QAAAA,OAAO,EAAEQ;AADC,OAAd;AAGH,KA7C2B;;AAAA,SA+C5BO,YA/C4B,GA+CZd,EAAD,IAAQ,CAEtB,CAjD2B;;AAAA,SAmD5Be,UAnD4B,GAmDf,MAAM,CAElB,CArD2B;AAAA;;AAuD5BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGK,KAAKlB,KAAL,CAAWC,OAAX,CAAmBa,GAAnB,CAAwBC,KAAD,iBACpB,QAAC,YAAD;AAEI,QAAA,KAAK,EAAEA,KAFX;AAGI,QAAA,MAAM,EAAE,KAAKH;AAHjB,SACSG,KAAK,CAACb,EADf;AAAA;AAAA;AAAA;AAAA,cADH,CAHL,eAWI;AAAQ,QAAA,OAAO,EAAE,KAAKG,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAzE2B;;AA4EhC,eAAeN,OAAf","sourcesContent":["import { Component } from 'react';\nimport JournalEntry from './JournalEntry/JournalEntry';\n\nclass Journal extends Component {\n    state = {\n        entries: [\n            { id: 1, title: 'My favourite linguine', likes: 50 },\n            { id: 2, title: 'How I became a squirrel', likes: 27 },\n            { id: 3, title: 'Fun with React State!', likes: 1 },\n        ]\n    };\n\n    handleAdd = () => {\n        // 1. Make a new entry object\n        const newEntry = { id: Date.now(), title: 'Infinite loops: a personal guide', likes: 10 };\n\n        // 2. Concat our array with our new entry\n        const newEntries = this.state.entries.concat(newEntry);\n        \n        // 3. Set a new array into our state\n        this.setState({\n            entries: newEntries\n        });\n    };\n\n    handleLike = (entryId) => {\n        // Increase the likes for this specific entry by 1\n\n        // const newEntries = this.state.entries.slice();\n        // const entryToLike = newEntries.find((entry) => entry.id === entryId);\n        // entryToLike.likes++;\n        // ^ or do it with map/object.assign/spread, because the above is technically mutating\n\n        const newEntries = this.state.entries.map((entry) => {\n            if (entry.id === entryId) {\n                return {\n                    id: entry.id,\n                    title: entry.title,\n                    likes: entry.likes + 1\n                }\n            }\n\n            return entry;\n        });\n\n        this.setState({\n            entries: newEntries\n        });\n    };\n\n    handleDelete = (id) => {\n\n    };\n\n    handleSort = () => {\n\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Journal</h2>\n\n                {this.state.entries.map((entry) => (\n                    <JournalEntry\n                        key={entry.id}\n                        entry={entry}\n                        onLike={this.handleLike}\n                    />\n                ))}\n\n                <button onClick={this.handleAdd}>\n                    Add Entry\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Journal;"]},"metadata":{},"sourceType":"module"}